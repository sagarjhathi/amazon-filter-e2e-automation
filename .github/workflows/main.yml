name: CI Pipeline

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"
  workflow_dispatch:
  schedule:
    - cron: "50 17 * * *"   # 11:20 PM IST daily

permissions:
  contents: write   # ‚úÖ allow pushing index.html back to repo

env:
  JAVA_DISTRIBUTION: temurin
  JAVA_VERSION: 24
  WORKDIR: eclipse-workspace/Intro
  ARTIFACT_RETENTION_DAYS: 7

jobs:
  test:
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true   # ‚úÖ ensures GITHUB_TOKEN is kept for pushing

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven

      - name: Cache Maven target and .m2 repo (optional)
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
            ${{ env.WORKDIR }}/target
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Print environment info
        shell: bash
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn -v
          echo "Working directory: ${{ env.WORKDIR }}"
          echo "Runner OS: $RUNNER_OS"

      - name: Notify Discord ‚Äì Start of Test
        if: always()
        shell: bash
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          runUrl="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          timestamp=$(TZ='Asia/Kolkata' date +"%Y-%m-%d %I:%M %p IST")
          actor="${{ github.actor }}"
          branch="${{ github.ref_name }}"
          job_name="${{ github.job }}"

          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"üöÄ **CI Test Started - $job_name**\\nüë§ Triggered by: $actor\\nüåø Branch: $branch\\nüïí Start Time: $timestamp\\nüîó [View Run]($runUrl)\"}" "$DISCORD_WEBHOOK"

      - name: Run Maven Tests
        working-directory: ${{ env.WORKDIR }}
        shell: bash
        run: |
          mvn -B -ntp clean test

      - name: Package Extent Report bundle with screenshots and logs
        if: always()
        shell: bash
        working-directory: ${{ env.WORKDIR }}
        run: |
          mkdir -p artifacts/extent
          if [ -d "test-output/ExtentReports" ]; then
            cp -r test-output/ExtentReports artifacts/extent/ExtentReports
          fi
          if [ -d "test-output/screenshots" ]; then
            cp -r test-output/screenshots artifacts/extent/screenshots
          fi
          if [ -d "logs" ]; then
            cp -r logs artifacts/extent/logs
          fi
          echo "<html><body><h3>Artifacts</h3><ul><li><a href='ExtentReports/ExtentReport.html'>Open Extent Report</a></li></ul></body></html>" > artifacts/extent/index.html

      - name: Upload Surefire Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: ${{ env.WORKDIR }}/target/surefire-reports
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: warn

      - name: Upload Extent Report Bundle (HTML + screenshots + logs)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: extent-report-bundle
          path: ${{ env.WORKDIR }}/artifacts/extent
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: warn

      - name: Upload Raw Logs (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: framework-logs
          path: |
            ${{ env.WORKDIR }}/logs
          retention-days: ${{ env.ARTIFACT_RETENTION_DAYS }}
          if-no-files-found: ignore

      - name: Notify Discord ‚Äì End of Test
        if: always()
        shell: bash
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          runUrl="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          artifactUrl="${runUrl}#artifacts"
          status="${{ job.status }}"

          if [ "$status" = "success" ]; then
            status_emoji="‚úÖ"
          elif [ "$status" = "failure" ]; then
            status_emoji="‚ùå"
          else
            status_emoji="‚ö†Ô∏è"
          fi

          commit_sha="${{ github.sha }}"
          commit_short="${commit_sha:0:7}"
          branch="${{ github.ref_name }}"
          actor="${{ github.actor }}"
          timestamp=$(TZ='Asia/Kolkata' date +"%Y-%m-%d %I:%M %p IST")

          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"$status_emoji **CI Pipeline - ${{ github.job }}** ($branch): $status\\nüë§ Triggered by: $actor\\nüîñ Commit: \`$commit_short\`\\nüïí Completed at: $timestamp\\nüîó [View Full Run Details]($runUrl)\\nüì¶ [Download Extent Report & Artifacts]($artifactUrl)\\nüí° *After downloading, extract all files and open ExtentReport.html in a browser to see the full report with screenshots.*\"}" "$DISCORD_WEBHOOK"


      - name: Copy logs to report folder
        run: |
           mkdir -p reports/logs
           if [ -d "${{ env.WORKDIR }}/logs" ]; then
           cp -r ${{ env.WORKDIR }}/logs/* reports/logs/
           echo "‚úÖ Logs copied to reports/logs/"
           else
           echo "‚ö†Ô∏è No logs found in ${{ env.WORKDIR }}/logs"
           fi


      - name: Copy latest ExtentReport to repo root
        if: always()
        shell: bash

        run: |
            REPORT_SOURCE="${{ github.workspace }}/${{ env.WORKDIR }}/test-output/ExtentReports/ExtentReport.html"
            REPORT_TARGET="${{ github.workspace }}/index.html"

            if [ -f "$REPORT_SOURCE" ]; then
              cp "$REPORT_SOURCE" "$REPORT_TARGET"
            echo "‚úÖ Copied ExtentReport to index.html at repo root"
            else
              echo "‚ö†Ô∏è ExtentReport.html not found at $REPORT_SOURCE"
            fi

      - name: Commit and Push Report to GitHub Pages
        if: always()
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add index.html reports/logs || echo "No changes to commit"
          git commit -m "Update ExtentReport + Logs [skip ci]" || echo "No changes to commit"
          git push --force
        
      

      